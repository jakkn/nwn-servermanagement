# Used by server-control.sh to start the nwserver in a tmux session.
# Do not run manually, as environment variables may be missing.
#
# Usage:
#       server-contrl.sh -s
#
# TODO: 

time_stamp() {
    printf "[$(date +'%Y-%m-%d %H:%M:%S')]"
}

for PID in `pgrep -f nwserver`; do
    [[ readlink -f /proc/$PID/exe == $server_directory/nwserver ]] && server_pid=$PID
done
if [ -n "${server_pid}" ]; then
    printf "%s NWN server, pid [${server_pid}], is already running. Aborting startup routine." "$(time_stamp)"
    exit 1
fi

tmux -S ${socket_path} has-session -t $target_session
if [ "$?" -eq 1 ] ; then
    printf "%s tmux -S $socket_path -t $target_session not found. Creating." "$(time_stamp)"
    # -S  --> specify socket path
    # -s  --> name the session
    # -d  --> detach
    # -t  --> specify a target location in the form session:window.pane
    tmux -S ${socket_path} new-session -s ${target_session} -d
    tmux -S ${socket_path} send-keys -t "${target_session}:0" "bash" Enter
    
    # if group exists, change tmux group to enable shared session
    { getent group $user_group } && {chgrp $user_group ${socket_path}}
fi

printf "%s Starting nwserver." "$(time_stamp)"
tmux -S ${socket_path} send-keys -t "${target_session}:0" "cd $server_directory" Enter
tmux -S ${socket_path} send-keys -t "${target_session}:0" "./$runscript" Enter

exit 0